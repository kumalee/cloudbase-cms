{"version":3,"sources":["assets/images/tcb-logo.svg","providers/configProvider.js","providers/tcbProvider.js","providers/authProvider.js","components/CmsAppBar.js","components/CmsLayout.js","components/CmsMenu.js","components/IconComponentHOC.js","providers/dataProvider.js","datamodel/index.js","datamodel/child-field.js","App.js","index.js"],"names":["module","exports","config","app","auth","useStyles","makeStyles","title","flex","textOverflow","whiteSpace","overflow","spacer","MyAppBar","props","classes","AppBar","className","alt","src","require","Typography","variant","color","id","CmsLayout","Layout","appBar","CmsAppBar","children","desc","padding","withRouter","onMenuClick","logout","isXSmall","useMediaQuery","theme","breakpoints","down","open","useSelector","state","admin","ui","sidebarOpen","resources","getResources","subtitleRecord","map","resource","group","options","showSubtitle","Fragment","key","name","MenuItemLink","to","primaryText","label","leftIcon","createElement","icon","onClick","sidebarIsOpen","Icon","getConfig","a","fetch","res","json","console","log","message","JSON","parse","process","REACT_APP_TCB_CMS_CONFIG","window","cmsEnvConfig","getApp","tcb","init","env","envId","TcbAuthProvider","login","username","password","getAuthObj","myHeaders","Headers","append","requestOptions","method","headers","body","stringify","userName","trim","redirect","then","response","loginRes","code","localStorage","setItem","data","role","signInWithTicket","ticket","Promise","reject","signOut","checkError","status","resolve","checkAuth","getLoginState","Error","getPermissions","getItem","persistence","hook","callApi","callWithHook","getList","fileIdDecorator","getOne","getMany","getManyReference","create","uploadDecorator","update","updateMany","delete","deleteMany","errorMap","NO_AUTH","operate","params","deepForEach","param","isType","cmsDataType","cloudId","callFunction","result","fn","parser","exec","getTempFileURL","tempUrl","rawFile","File","upload","parsedParams","matchFunction","action","all","Object","entries","url","Array","isArray","parseParams","file","uploadFile","cloudPath","Date","now","split","slice","filePath","fileID","cloudID","fileList","tempFileURL","type","obj","prototype","toString","call","basic","collectionName","description","fields","fieldName","fieldLabel","fieldType","isRequired","helpText","defaultValue","expectField","expectValue","childFields","hidden","connectResource","connectField","connectMany","myTheme","createMuiTheme","palette","secondary","indigo","typography","fontFamily","join","chineseMessages","ra","page","empty","invite","expand","close","confirm","i18nProvider","polyglotI18nProvider","App","enqueueSnackbar","useSnackbar","dataProvider","dataProviderWithHook","opertate","includes","anchorOrigin","vertical","horizontal","setTimeout","location","reload","Admin","authProvider","layout","menu","CmsMenu","fetchRemote","Empty","Box","textAlign","m","paragraph","permissions","hash","filter","pagination","perPage","sort","field","order","RescourceComponentsFactory","cmsConfig","defaultConfig","resouceConfig","resouceIndexById","reduce","prev","cur","_id","resouceIndexByCollectionName","length","collectionConfig","resourceComponents","ListComponent","EditComponent","CreateComponent","ShowComponent","Resource","show","list","edit","IconComponentHOC","IntegrationNotistack","maxSnack","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd790fb7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tcb-logo.b050342e.svg\";","let config;\n\nexport async function getConfig() {\n  if (config) {\n    return config;\n  }\n\n  try {\n    const res = await fetch(\"config.json\");\n    config = await res.json();\n  } catch (error) {\n    console.log(\"error is\", error.message);\n    config = JSON.parse(process.env.REACT_APP_TCB_CMS_CONFIG);\n  }\n\n  window.cmsEnvConfig = config;\n\n  return config;\n}\n","import { getConfig } from \"./configProvider\";\n\nlet app;\n\nexport async function getApp() {\n  if (!app) {\n    const config = await getConfig();\n    app = window.tcb.init({\n      env: config.envId,\n    });\n    window.app = app;\n  }\n\n  return app;\n}\n","import { getApp } from \"./tcbProvider\";\nimport { getConfig } from \"./configProvider\";\n\nlet auth;\n\nconst TcbAuthProvider = {\n  // called when the user attempts to log in\n  async login({ username, password }) {\n    const config = await getConfig();\n    const auth = await this.getAuthObj();\n\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    let requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: JSON.stringify({\n        userName: username.trim(),\n        password: password.trim(),\n      }),\n      redirect: \"follow\",\n    };\n\n    // 初始化时写入\n    const loginRes = await fetch(\n      `//${config.envId}.service.tcloudbase.com/tcb-ext-cms-auth/login`,\n      requestOptions\n    ).then((response) => response.json());\n\n    if (!loginRes.code) {\n      localStorage.setItem(\"tcb-cms-role\", loginRes.data.role);\n      return auth.signInWithTicket(loginRes.data.ticket);\n    } else {\n      return Promise.reject(loginRes.message);\n    }\n  },\n  // called when the user clicks on the logout button\n  async logout() {\n    const auth = await this.getAuthObj();\n    return auth.signOut().then(console.log);\n  },\n  // called when the API returns an error\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  // called when the user navigates to a new location, to check for authentication\n  async checkAuth() {\n    const auth = await this.getAuthObj();\n    const loginState = await auth.getLoginState();\n\n    if (!loginState) {\n      throw new Error(\"未登录，请先登录后再进行操作\");\n    }\n  },\n  // called when the user navigates to a new location, to check for permissions / roles\n  getPermissions: (...rest) => {\n    const role = localStorage.getItem(\"tcb-cms-role\");\n    return role ? Promise.resolve(role) : Promise.reject();\n  },\n\n  async getAuthObj() {\n    if (!auth) {\n      const app = await getApp();\n      auth = app.auth({ persistence: \"local\" });\n    }\n    return auth;\n  },\n};\n\nexport default TcbAuthProvider;\n","import React from 'react';\nimport {AppBar} from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\n\n// import Logo from './Logo';\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  spacer: {\n    flex: 1,\n  },\n});\n\nconst MyAppBar = (props) => {\n  const classes = useStyles();\n  return (\n    <AppBar {...props}>\n      <img\n        className=\"tcb-cms-app-logo\"\n        alt=\"云开发\"\n        src={require('../assets/images/tcb-logo.svg')}\n      />\n      <Typography\n        variant=\"subtitle1\"\n        color=\"inherit\"\n        className={classes.title}\n        id=\"tcbCmsAppTitle\"\n      >\n        CMS 内容管理系统\n      </Typography>\n    </AppBar>\n  );\n};\n\nexport default MyAppBar;\n","import React from 'react'\nimport { Layout } from 'react-admin'\nimport CmsAppBar from './CmsAppBar';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst CmsLayout = props => {\n  return (\n    <Layout\n      {...props}\n      appBar={CmsAppBar}\n    // menu={MyMenu}\n    // notification={MyNotification}\n    >\n      <Typography\n        variant=\"h6\"\n        color=\"inherit\"\n        id=\"react-admin-title\"\n      />\n      {props.children}\n    </Layout>\n  )\n}\n\nexport default CmsLayout\n","import React, { createElement } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useMediaQuery } from '@material-ui/core';\nimport { MenuItemLink, getResources } from 'react-admin';\nimport { withRouter } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    desc: {\n        padding: '15px 20px',\n        color: '#111'\n    }\n});\n\nconst Menu = ({ onMenuClick, logout }) => {\n    const classes = useStyles()\n    const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n    const open = useSelector(state => state.admin.ui.sidebarOpen);\n    const resources = useSelector(getResources);\n    const subtitleRecord = {}\n    return (\n        <div>\n            {resources.map(resource => {\n                const group = resource.options?.group\n                const showSubtitle = group && !(group in subtitleRecord)\n                if (showSubtitle) {\n                    subtitleRecord[group] = true\n                }\n                return (\n                    <React.Fragment key={resource.name}>\n                        {showSubtitle && <>< Typography\n                            variant=\"body2\"\n                            color=\"inherit\"\n                            key={group}\n                            className={classes.desc}\n                        >{group}</Typography></>}\n                        <MenuItemLink\n                            key={resource.name}\n                            to={`/${resource.name}`}\n                            primaryText={resource.options?.label || resource.name}\n                            leftIcon={createElement(resource.icon)}\n                            onClick={onMenuClick}\n                            sidebarIsOpen={open}\n                        />\n                    </React.Fragment>\n                )\n            })}\n            {isXSmall && logout}\n        </div >\n    );\n}\n\nexport default withRouter(Menu);","import React from 'react'\nimport Icon from '@material-ui/core/Icon'\n// https://material.io/resources/icons/?style=baseline\n// https://material-ui.com/zh/components/icons/#icon-font-icons\nexport default icon => props => {\n  return <Icon>{icon ? icon : 'library_books'}</Icon>\n}\n","// 数据提供程序方法必须为具有data属性的对象返回Promise 。\n// getList\t{ data: {Record[]}, total: {int} }\n// getOne\t{ data: {Record} }\n// getMany\t{ data: {Record[]} }\n// getManyReference\t{ data: {Record[]}, total: {int} }\n// create\t{ data: {Record} }\n// update\t{ data: {Record} }\n// updateMany\t{ data: {mixed[]} } 已更新的ID\n// delete\t{ data: {Record|null} } 已删除的记录（可选）\n// deleteMany\t{ data: {mixed[]} } 删除记录的ID（可选）\n// A {Record}是具有至少一个id属性的对象文字，例如{ id: 123, title: \"hello, world\" }。\nimport { getApp } from \"./tcbProvider\";\n\nexport default (hook = () => {}) => {\n  const callApi = callWithHook(hook);\n  return {\n    getList: fileIdDecorator(callApi(\"getList\")),\n    getOne: fileIdDecorator(callApi(\"getOne\")),\n    getMany: fileIdDecorator(callApi(\"getMany\")),\n    getManyReference: fileIdDecorator(callApi(\"getManyReference\")),\n    create: fileIdDecorator(uploadDecorator(callApi(\"create\"))),\n    update: fileIdDecorator(uploadDecorator(callApi(\"update\"))),\n    updateMany: fileIdDecorator(uploadDecorator(callApi(\"updateMany\"))),\n    delete: callApi(\"delete\"),\n    deleteMany: callApi(\"deleteMany\"),\n  };\n};\n\nconst errorMap = {\n  NO_AUTH: \"没有内容操作权限\",\n};\n\nconst callWithHook = (hook) => (operate) => {\n  return async function (resource, params) {\n    params = await transformLocalCloudId(params);\n    const app = await getApp();\n    const res = await app.callFunction({\n      name: \"tcb-ext-cms-api\",\n      data: {\n        operate,\n        resource,\n        params,\n      },\n    });\n\n    if (res.result.code) {\n      return Promise.reject(\n        new Error(res.message || errorMap[res.result.code] || res.result.code)\n      );\n    } else {\n      hook(operate, resource, res.result);\n      return res.result;\n    }\n  };\n};\n\n/**\n * cloudId => { cloudId, tempUrl, cmsDataType: 'local' }\n */\nfunction fileIdDecorator(fn) {\n  return async function (resource, params) {\n    const res = await fn(resource, params);\n    const parser = deepForEach(\n      (param, params) =>\n        typeof param === \"string\" &&\n        /^cloud:\\/\\/\\S+/.exec(param) &&\n        params.cmsDataType !== \"local\",\n      async (param) => {\n        return {\n          tempUrl: await getTempFileURL(param),\n          cloudId: param,\n          cmsDataType: \"local\",\n        };\n      }\n    );\n    return parser({ ...res });\n  };\n}\n\n/**\n *  { cloudId, tempUrl, cmsDataType: 'local' } => cloudId\n */\nfunction transformLocalCloudId(data) {\n  return deepForEach(\n    (param) => isType(\"Object\")(param) && param.cmsDataType === \"local\",\n    async (param) => {\n      return param.cloudId;\n    }\n  )(data);\n}\n\n/**\n *\n * {rawFile} => { cloudId, cmsDataType: 'local' }\n */\nfunction uploadDecorator(fn) {\n  return async function (resource, params) {\n    const parser = deepForEach(\n      (param) => param && param.rawFile instanceof File,\n      async (param) => {\n        return {\n          cloudId: await upload(param.rawFile),\n          cmsDataType: \"local\",\n        };\n      }\n    );\n    const parsedParams = await parser({ ...params });\n    return fn(resource, parsedParams);\n  };\n}\n\nfunction deepForEach(matchFunction, action) {\n  return async function parseParams(params) {\n    await Promise.all(\n      Object.entries(params).map(async ([key, param]) => {\n        if (matchFunction(param, params)) {\n          const url = await action(param);\n          params[key] = url;\n        } else if (Array.isArray(param) || isType(\"Object\")(param)) {\n          return parseParams(param);\n        }\n      })\n    );\n    return params;\n  };\n}\n\nasync function upload(file) {\n  const app = await getApp();\n  const result = await app.uploadFile({\n    cloudPath: `uploads/${Date.now()}.${file.name.split(\".\").slice(-1)[0]}`,\n    filePath: file,\n  });\n\n  return result.fileID;\n}\n\nasync function getTempFileURL(cloudID) {\n  const app = await getApp();\n  const result = await app.getTempFileURL({\n    fileList: [cloudID],\n  });\n  return result.fileList[0].tempFileURL;\n}\n\nfunction isType(type) {\n  return function (obj) {\n    return Object.prototype.toString.call(obj) === \"[object \" + type + \"]\";\n  };\n}\n","import { getChildFields } from \"./child-field\";\n\nconst contentsCollectionName = \"tcb-ext-cms-contents\";\nconst webhooksCollectionName = \"tcb-ext-cms-webhooks\";\n\nexport default [\n  {\n    collectionName: contentsCollectionName,\n    label: \"内容设置\",\n    icon: \"settings\",\n    group: \"管理\",\n    description:\n      \"开发者可以根据数据库字段进行内容设置，并自动生成管理界面，修改内容设置后，需刷新页面查看最新的管理界面\",\n    fields: [\n      {\n        fieldName: \"label\",\n        fieldLabel: \"内容类型\",\n        fieldType: \"String\",\n        isRequired: true,\n      },\n      {\n        fieldName: \"collectionName\",\n        fieldLabel: \"数据库集合名\",\n        fieldType: \"String\",\n        isRequired: true,\n        helpText:\n          \"内容对应的数据库集合名，可填写现有集合名，如集合不存在则会自动创建\",\n      },\n      {\n        fieldName: \"icon\",\n        fieldLabel: \"图标\",\n        fieldType: \"Icon\",\n      },\n      {\n        fieldName: \"order\",\n        fieldLabel: \"排序（值越大越靠前）\",\n        fieldType: \"Number\",\n      },\n      {\n        fieldName: \"description\",\n        fieldLabel: \"描述信息\",\n        fieldType: \"String\",\n        isRequired: false,\n        helpText: \"会展示在对应内容的管理页面顶部\",\n      },\n      getChildFields(),\n    ],\n  },\n  {\n    collectionName: webhooksCollectionName,\n    label: \"Webhook\",\n    description:\n      \"实验室功能：Webhook 可以用于在运营人员修改内容数据后，自动回调外部系统，比如自动构建静态网站、发送通知等\",\n    icon: \"all_inclusive\",\n    group: \"管理\",\n    fields: [\n      {\n        fieldName: \"name\",\n        fieldLabel: \"Webhook 名称\",\n        fieldType: \"String\",\n        isRequired: true,\n      },\n      {\n        fieldName: \"method\",\n        fieldLabel: \"HTTP method\",\n        fieldType: \"Select\",\n        isRequired: true,\n        options: [\n          {\n            id: \"POST\",\n            name: \"POST\",\n          },\n          {\n            id: \"GET\",\n            name: \"GET\",\n          },\n          {\n            id: \"PUT\",\n            name: \"PUT\",\n          },\n          {\n            id: \"PATCH\",\n            name: \"PATCH\",\n          },\n          {\n            id: \"DELETE\",\n            name: \"DELETE\",\n          },\n        ],\n        defaultValue: \"POST\",\n      },\n      {\n        fieldName: \"url\",\n        fieldLabel: \"Webhook地址\",\n        fieldType: \"Url\",\n        isRequired: true,\n      },\n      {\n        fieldName: \"triggerType\",\n        fieldLabel: \"触发类型\",\n        fieldType: \"Select\",\n        isRequired: true,\n        defaultValue: \"all\",\n        options: [\n          {\n            id: \"all\",\n            name: \"所有内容事件都触发\",\n          },\n          {\n            id: \"filter\",\n            name: \"只有指定内容事件才触发\",\n          },\n        ],\n      },\n      {\n        fieldName: \"event\",\n        fieldLabel: \"触发类型\",\n        fieldType: \"SelectArray\",\n        expectField: \"triggerType\",\n        expectValue: \"filter\",\n        defaultValue: [\n          \"create\",\n          \"update\",\n          \"updateMany\",\n          \"delete\",\n          \"deleteMany\",\n        ],\n        options: [\n          {\n            id: \"create\",\n            name: \"create\",\n          },\n          {\n            id: \"update\",\n            name: \"update\",\n          },\n          {\n            id: \"updateMany\",\n            name: \"updateMany\",\n          },\n          {\n            id: \"delete\",\n            name: \"delete\",\n          },\n          {\n            id: \"deleteMany\",\n            name: \"deleteMany\",\n          },\n        ],\n      },\n      {\n        fieldName: \"collections\",\n        fieldLabel: \"监听指定内容\",\n        fieldType: \"Connect\",\n        connectResource: \"tcb-ext-cms-contents\",\n        connectMany: true,\n        connectField: \"label\",\n        helpText: \"仅在指定集合变化时触发\",\n      },\n      {\n        fieldName: \"headers\",\n        fieldLabel: \"HTTP Headers\",\n        fieldType: \"Array\",\n        childFields: [\n          {\n            fieldName: \"key\",\n            fieldLabel: \"Key\",\n            fieldType: \"String\",\n            isRequired: true,\n          },\n          {\n            fieldName: \"value\",\n            fieldLabel: \"Value\",\n            fieldType: \"String\",\n            isRequired: true,\n          },\n        ],\n      },\n    ],\n  },\n];\n","export function getBasicFieldtype() {\n  return [\n    {\n      id: \"String\",\n      name: \"字符串\",\n    },\n    // {\n    //   id: \"Date\",\n    //   name: \"日期\",\n    // },\n    {\n      id: \"DateTime\",\n      name: \"时间\",\n    },\n    {\n      id: \"Boolean\",\n      name: \"布尔值\",\n    },\n    {\n      id: \"Number\",\n      name: \"数字\",\n    },\n    {\n      id: \"Image\",\n      name: \"图片\",\n    },\n    {\n      id: \"File\",\n      name: \"文件\",\n    },\n    {\n      id: \"Email\",\n      name: \"邮箱地址\",\n    },\n    {\n      id: \"Tel\",\n      name: \"电话号码\",\n    },\n    {\n      id: \"Url\",\n      name: \"网址\",\n    },\n    {\n      id: \"RichText\",\n      name: \"富文本\",\n    },\n    {\n      id: \"Markdown\",\n      name: \"Markdown\",\n    },\n    {\n      id: \"Array\",\n      name: \"数组\",\n    },\n  ];\n}\n\nexport function getChildFields(basic) {\n  const supportArray = false;\n  return {\n    fieldName: basic ? \"childFields\" : \"fields\",\n    fieldLabel: basic ? \"子字段列表（只有数组类型时才需要填写）\" : \"字段列表\",\n    fieldType: \"Array\",\n    isRequired: true,\n    defaultValue: basic\n      ? []\n      : [\n          {\n            fieldName: \"name\",\n            fieldLabel: \"名称\",\n            fieldType: \"String\",\n          },\n          {\n            fieldName: \"order\",\n            fieldLabel: \"排序\",\n            helpText: \"值越大在 CMS 列表中越靠前\",\n            fieldType: \"Number\",\n          },\n          {\n            fieldName: \"createTime\",\n            fieldLabel: \"创建时间\",\n            fieldType: \"DateTime\",\n            helpText: \"留空时会在服务端自动写入创建时间\",\n          },\n          {\n            fieldName: \"updateTime\",\n            fieldLabel: \"修改时间\",\n            fieldType: \"DateTime\",\n            helpText: \"留空时会在服务端自动写入修改时间\",\n          },\n        ],\n    ...(basic\n      ? {\n          expectField: \"fieldType\",\n          expectValue: \"Array\",\n        }\n      : {}),\n    childFields: [\n      {\n        fieldName: \"fieldLabel\",\n        fieldLabel: \"字段名称\",\n        helpText: \"字段中文显示名称\",\n        fieldType: \"String\",\n        isRequired: true,\n      },\n      {\n        fieldName: \"fieldName\",\n        fieldLabel: \"数据库字段名\",\n        fieldType: \"String\",\n        helpText: \"该字段在数据库中保存的名称\",\n        isRequired: true,\n      },\n      {\n        fieldName: \"fieldType\",\n        fieldLabel: \"字段类型\",\n        fieldType: \"Select\",\n        isRequired: true,\n        options: [\n          ...getBasicFieldtype(),\n          ...(basic\n            ? []\n            : [\n                {\n                  id: \"Connect\",\n                  name: \"关联\",\n                },\n                ...(supportArray\n                  ? [\n                      {\n                        id: \"Array\",\n                        name: \"数组\",\n                      },\n                    ]\n                  : []),\n              ]),\n        ],\n      },\n      {\n        fieldName: \"stringMinLength\",\n        fieldLabel: \"最小长度\",\n        fieldType: \"Number\",\n        hidden: true,\n        expectField: \"fieldType\",\n        expectValue: \"String\",\n      },\n      {\n        fieldName: \"stringMaxLength\",\n        fieldLabel: \"最大长度\",\n        fieldType: \"Number\",\n        hidden: true,\n        expectField: \"fieldType\",\n        expectValue: \"String\",\n      },\n      ...(basic\n        ? []\n        : [\n            {\n              fieldName: \"connectResource\",\n              fieldLabel: \"关联的内容\",\n              fieldType: \"Connect\",\n              connectResource: \"tcb-ext-cms-contents\",\n              connectField: \"label\",\n              helpText: \"这个字段引用了一个或者多个关联内容\",\n              expectField: \"fieldType\",\n              expectValue: \"Connect\",\n            },\n            {\n              fieldName: \"connectField\",\n              fieldLabel: \"显示关联的内容中的哪个字段\",\n              fieldType: \"String\",\n              hidden: true,\n              helpText: \"在编辑时，会显示引用的关联内容的某个字段\",\n              expectField: \"fieldType\",\n              expectValue: \"Connect\",\n            },\n            {\n              fieldName: \"connectMany\",\n              fieldLabel: \"是否关联多项\",\n              fieldType: \"Boolean\",\n              hidden: true,\n              helpText: \"是否引用多个\",\n              expectField: \"fieldType\",\n              expectValue: \"Connect\",\n            },\n          ]),\n      {\n        fieldName: \"defaultValue\",\n        fieldLabel: \"默认值\",\n        fieldType: \"Text\",\n        hidden: true,\n      },\n      {\n        fieldName: \"helpText\",\n        fieldLabel: \"字段说明\",\n        fieldType: \"Text\",\n        helpText: \"说明文字会展示在输入框下方\",\n        hidden: true,\n      },\n      {\n        fieldName: \"isRequired\",\n        fieldLabel: \"是否必填\",\n        fieldType: \"Boolean\",\n        hidden: true,\n      },\n      {\n        fieldName: \"hidden\",\n        fieldLabel: \"是否隐藏该列\",\n        fieldType: \"Boolean\",\n        helpText: \"在PC端表格视图是否隐藏该列\",\n        hidden: true,\n        isRequired: false,\n        defaultValue: false,\n      },\n      ...(basic ? [] : supportArray ? [getChildFields(true)] : []),\n    ],\n  };\n}\n","import React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport polyglotI18nProvider from \"ra-i18n-polyglot\";\nimport chineseMessages from \"ra-language-chinese\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\n\nimport CmsLayout from \"./components/CmsLayout\";\nimport CmsMenu from \"./components/CmsMenu\";\nimport IconComponentHOC from \"./components/IconComponentHOC\";\nimport authProvider from \"./providers/authProvider\";\nimport dataProviderWithHook from \"./providers/dataProvider\";\nimport defaultConfig from \"./datamodel\";\n\nconst contentsCollectionName = \"tcb-ext-cms-contents\";\n\nconst myTheme = createMuiTheme({\n  palette: {\n    secondary: indigo,\n  },\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n});\n\n// 本地化\nchineseMessages.ra.page.empty = \"还没有内容\";\nchineseMessages.ra.page.invite = \"快来点击 “新建” 来创建第一条内容吧\";\nchineseMessages.ra.action.expand = \"展开\";\nchineseMessages.ra.action.close = \"关闭\";\nchineseMessages.ra.action.confirm = \"确定\";\n\nconst i18nProvider = polyglotI18nProvider(() => chineseMessages, \"cn\");\n\nconst App = () => {\n  const { enqueueSnackbar } = useSnackbar();\n  const dataProvider = dataProviderWithHook((opertate, resource) => {\n    // 统一回调\n    if (\n      resource === \"tcb-ext-cms-contents\" &&\n      [\"create\", \"update\", \"delete\"].includes(opertate)\n    ) {\n      enqueueSnackbar(\"内容建模设置已更新，将会自动刷新页面更新最新管理界面\", {\n        variant: \"info\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\",\n        },\n      });\n      setTimeout(() => window.location.reload(), 2500);\n    }\n  });\n\n  return (\n    <Admin\n      title=\"云开发CMS内容管理系统扩展\"\n      i18nProvider={i18nProvider}\n      authProvider={authProvider}\n      dataProvider={dataProvider}\n      theme={myTheme}\n      layout={CmsLayout}\n      menu={CmsMenu}\n    >\n      {fetchRemote}\n    </Admin>\n  );\n};\n\nconst Empty = () => (\n  <Box textAlign=\"center\" m={1}>\n    <Typography variant=\"h5\" paragraph>\n      内容设置为空，请联系你的 CMS 系统管理员进行内容配置\n    </Typography>\n  </Box>\n);\n\nconst fetchRemote = async (permissions) => {\n  try {\n    await authProvider.checkAuth();\n  } catch (e) {\n    window.location.hash = \"#/login\";\n  }\n  const [res, { RescourceComponentsFactory }] = await Promise.all([\n    dataProviderWithHook().getList(contentsCollectionName, {\n      filter: {},\n      pagination: { page: 1, perPage: 100 },\n      sort: { field: \"order\", order: \"DESC\" },\n    }),\n    import(\"./components/resources\"),\n  ]);\n  window.cmsConfig = {\n    defaultConfig,\n    resouceConfig: res.data,\n    resouceIndexById: res.data.reduce((prev, cur) => {\n      prev[cur._id] = cur;\n      return prev;\n    }, {}),\n    resouceIndexByCollectionName: res.data.reduce((prev, cur) => {\n      prev[cur.collectionName] = cur;\n      return prev;\n    }, {}),\n  };\n  const config = [\n    ...(permissions === \"administrator\" ? defaultConfig : []),\n    ...res.data.filter(\n      (resouceConfig) => resouceConfig.collectionName && resouceConfig.label\n    ),\n  ];\n  if (!config.length) return [<Empty />];\n  return config.map((collectionConfig) => {\n    const resourceComponents = RescourceComponentsFactory(collectionConfig);\n    const {\n      ListComponent,\n      EditComponent,\n      CreateComponent,\n      ShowComponent,\n    } = resourceComponents;\n    const { collectionName, label, icon, group = \"运营\" } = collectionConfig;\n    return (\n      <Resource\n        name={collectionName}\n        options={{ label, group }}\n        show={ShowComponent}\n        list={ListComponent}\n        edit={EditComponent}\n        create={CreateComponent}\n        icon={IconComponentHOC(icon)}\n      />\n    );\n  });\n};\n\nexport default function IntegrationNotistack() {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/css/index.css\";\nimport \"./assets/css/fonts.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}